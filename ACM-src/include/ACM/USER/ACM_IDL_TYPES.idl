//# Copyright (c) Vanderbilt University, 2010
//# ALL RIGHTS RESERVED
//# Vanderbilt University disclaims all warranties with regard to this
//# software, including all implied warranties of merchantability
//# and fitness.  In no event shall Vanderbilt University be liable for
//# any special, indirect or consequential damages or any damages
//# whatsoever resulting from loss of use, data or profits, whether
//# in an action of contract, negligence or other tortious action,
//# arising out of or in connection with the use or performance of
//# this software.

module ACM_INTERFACE {

	#define ERROR_RESPONSE_TYPE_MESSAGE_SIZE 200

	enum ERROR_CODE_TYPE{			
		DEADLINE_MISSED ,
		APPLICATION_ERROR,
		NUMERIC_ERROR ,
		ILLEGAL_REQUEST,
		STACK_OVERFLOW,
		MEMORY_VIOLATION ,
		HARDWARE_FAULT,
		POWER_FAIL 
	} ;



	enum HM_MESSAGE_DISCRIMINATOR_TYPE {STRINGMESSAGE,APPLICATION_SPECIFIC};
	enum RESPONDING_ENTITY_TYPE {PROCESS,HM,PARTITIONSCHEDULER};
	enum HM_ACTION_ENUM_TYPE{REFUSE,IGNORE,SUSPEND,STOP,START,USE_PAST_DATA,USER_SPECIFIC_RESPONSE};
	typedef char HM_MESSAGE_TYPE_ARR [ERROR_RESPONSE_TYPE_MESSAGE_SIZE];

	struct HM_RESPONSE_TYPE
	{
		
		ERROR_CODE_TYPE ERROR_CODE; //!ARINC-653 specified error codes
		long long TIMEOFMESSAGE;		
		unsigned long HM_MESSAGE_LENGTH;
		HM_MESSAGE_DISCRIMINATOR_TYPE HM_MESSAGE_DISCRIMINATOR;
		HM_MESSAGE_TYPE_ARR HM_MESSAGE; //! This can potentially carry application SPECIFIC DATA
		HM_ACTION_ENUM_TYPE HM_ACTION;
	};
	
	//! USed to store the process Responses;
	struct RMI_RESPONSE_TYPE
	{
		boolean NO_ERROR;		
		RESPONDING_ENTITY_TYPE RESPONDING_ENTITY;
		long long TIMEOFMESSAGE;
		HM_RESPONSE_TYPE ERROR_RESPONSE; //! Do not read HM_RESPONSE_TYPE if there was no error
	};

};

