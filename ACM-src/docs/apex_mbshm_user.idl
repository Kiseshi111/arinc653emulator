#include <apex_mbshm_type.idl>

module ACM_USER {

	interface APEX_SERVICES {
		//! \name HELPER_METHODS
		void PRINT_CREATED_OBJECT_LIST(out RETURN_CODE_TYPE RETURN_CODE );
		void SET_PARTITION_NAME(in string  NAME);
		void GET_PARTITION_NAME(out string Name);
		void APEX_HELPER_CREATE_PROCESS(in SYSTEM_TIME_TYPE PERIOD, in SYSTEM_TIME_TYPE TIME_CAPACITY,in SYSTEM_ADDRESS_TYPE ENTRY_POINT, in STACK_SIZE_TYPE STACK_SIZE, in PRIORITY_TYPE BASE_PRIORITY,in DEADLINE_TYPE DEADLINE,in string PROCESS_NAME, out PROCESS_ID_TYPE PROCESS_ID, out RETURN_CODE_TYPE RETURN_CODE);
		void APEX_HELPER_START_PROCESS(in PROCESS_NAME_TYPE PNAME, out RETURN_CODE_TYPE RETURN_CODE);
		void APEX_HELPER_START_PROCESS_AND_WAIT_FOR_RESPONSE(in PROCESS_NAME_TYPE PNAME, out MESSAGE_ADDR_TYPE PROCESS_RESPONSE,in MESSAGE_SIZE_TYPE PROCESS_RESPONSE_CAPACITY,	 out MESSAGE_SIZE_TYPE PROCESS_RESPONSE_LENGTH, out RETURN_CODE_TYPE RETURN_CODE);
		void APEX_HELPER_DELAYED_START_PROCESS(in PROCESS_NAME_TYPE PNAME,in SYSTEM_TIME_TYPE DELAY, out RETURN_CODE_TYPE  RETURN_CODE);
		void APEX_HELPER_STOP_PROCESS(in PROCESS_NAME_TYPE PNAME,out RETURN_CODE_TYPE  RETURN_CODE);
		void APEX_HELPER_SUSPEND_PROCESS(in PROCESS_NAME_TYPE PNAME,out RETURN_CODE_TYPE  RETURN_CODE);
		void APEX_HELPER_RESUME_PROCESS(in PROCESS_NAME_TYPE PNAME,out RETURN_CODE_TYPE  RETURN_CODE);
		void APEX_HELPER_CREATE_AND_START_DUMMY_PROCESS(out RETURN_CODE_TYPE  RETURN_CODE);
		void APEX_HELPER_SET_EVENT(in EVENT_NAME_TYPE EVENT_NAME,out RETURN_CODE_TYPE  RETURN_CODE);
		void APEX_HELPER_RESET_EVENT(in EVENT_NAME_TYPE EVENT_NAME,out RETURN_CODE_TYPE  RETURN_CODE);
		void APEX_HELPER_WAIT_EVENT (in EVENT_NAME_TYPE EVENT_NAME, in SYSTEM_TIME_TYPE TIME_OUT,out RETURN_CODE_TYPE  RETURN_CODE );

		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		//! \name Event Management Services

		void CREATE_EVENT (in  EVENT_NAME_TYPE EVENT_NAME,out  EVENT_ID_TYPE  EVENT_ID,out  RETURN_CODE_TYPE  RETURN_CODE );
		void SET_EVENT (in  EVENT_ID_TYPE EVENT_ID,	out  RETURN_CODE_TYPE  RETURN_CODE );
		void RESET_EVENT (in  EVENT_ID_TYPE EVENT_ID,out  RETURN_CODE_TYPE  RETURN_CODE );
		void WAIT_EVENT (in  EVENT_ID_TYPE EVENT_ID,in  SYSTEM_TIME_TYPE TIME_OUT,	out  RETURN_CODE_TYPE  RETURN_CODE );
		void GET_EVENT_ID (	in  EVENT_NAME_TYPE EVENT_NAME,	out  EVENT_ID_TYPE  EVENT_ID,out  RETURN_CODE_TYPE  RETURN_CODE );
		void GET_EVENT_STATUS (in  EVENT_ID_TYPE EVENT_ID,out  EVENT_STATUS_TYPE  EVENT_STATUS,out  RETURN_CODE_TYPE  RETURN_CODE );

		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		//!\name SEMAPHORE   management services
		void CREATE_SEMAPHORE (in  SEMAPHORE_NAME_TYPE SEMAPHORE_NAME,in  SEMAPHORE_VALUE_TYPE CURRENT_VALUE,in  SEMAPHORE_VALUE_TYPE MAXIMUM_VALUE,in  QUEUING_DISCIPLINE_TYPE QUEUING_DISCIPLINE,	out  SEMAPHORE_ID_TYPE  SEMAPHORE_ID,out  RETURN_CODE_TYPE  RETURN_CODE );
		void WAIT_SEMAPHORE (in  SEMAPHORE_ID_TYPE SEMAPHORE_ID,in  SYSTEM_TIME_TYPE TIME_OUT,out  RETURN_CODE_TYPE  RETURN_CODE );
		void SIGNAL_SEMAPHORE (in  SEMAPHORE_ID_TYPE SEMAPHORE_ID,out  RETURN_CODE_TYPE  RETURN_CODE );
		void GET_SEMAPHORE_ID (in  SEMAPHORE_NAME_TYPE SEMAPHORE_NAME,out  SEMAPHORE_ID_TYPE  SEMAPHORE_ID, out  RETURN_CODE_TYPE  RETURN_CODE );
		void GET_SEMAPHORE_STATUS (in  SEMAPHORE_ID_TYPE SEMAPHORE_ID,out  SEMAPHORE_STATUS_TYPE  SEMAPHORE_STATUS,out  RETURN_CODE_TYPE  RETURN_CODE );
		void CREATE_RW_SEMAPHORE (		in  SEMAPHORE_NAME_TYPE SEMAPHORE_NAME,		in  SEMAPHORE_VALUE_TYPE MAXIMUM_READERS,		out  SEMAPHORE_ID_TYPE  SEMAPHORE_ID,out  RETURN_CODE_TYPE  RETURN_CODE );

		void GET_RW_SEMAPHORE_ID (in  SEMAPHORE_NAME_TYPE SEMAPHORE_NAME,out  SEMAPHORE_ID_TYPE  SEMAPHORE_ID,out  RETURN_CODE_TYPE  RETURN_CODE );
		//!Currently ignore Time_Out
		void READLOCK_RW_SEMAPHORE (in  SEMAPHORE_ID_TYPE SEMAPHORE_ID,in  SYSTEM_TIME_TYPE TIME_OUT,out  RETURN_CODE_TYPE  RETURN_CODE );
		void READUNLOCK_RW_SEMAPHORE (in  SEMAPHORE_ID_TYPE SEMAPHORE_ID,out  RETURN_CODE_TYPE  RETURN_CODE );
		void WRITELOCK_RW_SEMAPHORE (in  SEMAPHORE_ID_TYPE SEMAPHORE_ID,in  SYSTEM_TIME_TYPE TIME_OUT,out  RETURN_CODE_TYPE  RETURN_CODE );
		void WRITEUNLOCK_RW_SEMAPHORE (in  SEMAPHORE_ID_TYPE SEMAPHORE_ID,out  RETURN_CODE_TYPE  RETURN_CODE );

		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		//!\name PARTITION management services

		void GET_PARTITION_STATUS (out PARTITION_STATUS_TYPE PARTITION_STATUS,out RETURN_CODE_TYPE RETURN_CODE );
		void SET_PARTITION_MODE (in  OPERATING_MODE_TYPE OPERATING_MODE,out RETURN_CODE_TYPE RETURN_CODE );
		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		//! \name Process management services

		void CREATE_PROCESS (in  PROCESS_ATTRIBUTE_TYPE  ATTRIBUTES,out  PROCESS_ID_TYPE  PROCESS_ID,out  RETURN_CODE_TYPE  RETURN_CODE );
		void SET_PRIORITY (in  PROCESS_ID_TYPE PROCESS_ID,in  PRIORITY_TYPE PRIORITY,out  RETURN_CODE_TYPE  RETURN_CODE );
		void SUSPEND_SELF (in  SYSTEM_TIME_TYPE TIME_OUT,out  RETURN_CODE_TYPE  RETURN_CODE );
		void SUSPEND (in  PROCESS_ID_TYPE PROCESS_ID,out  RETURN_CODE_TYPE  RETURN_CODE );
		void RESUME (in  PROCESS_ID_TYPE PROCESS_ID,out  RETURN_CODE_TYPE  RETURN_CODE );
		void STOP_SELF ();
		void STOP (in  PROCESS_ID_TYPE PROCESS_ID,out  RETURN_CODE_TYPE  RETURN_CODE );
		void START (in  PROCESS_ID_TYPE PROCESS_ID,out  RETURN_CODE_TYPE  RETURN_CODE );
		void DELAYED_START (in  PROCESS_ID_TYPE PROCESS_ID,in  SYSTEM_TIME_TYPE DELAY_TIME,out  RETURN_CODE_TYPE  RETURN_CODE );
		void GET_MY_ID (out  PROCESS_ID_TYPE  PROCESS_ID,out  RETURN_CODE_TYPE  RETURN_CODE );
		void GET_PROCESS_ID (in  PROCESS_NAME_TYPE PROCESS_NAME, out  PROCESS_ID_TYPE  PROCESS_ID,out  RETURN_CODE_TYPE  RETURN_CODE );

		void GET_PROCESS_STATUS (in  PROCESS_ID_TYPE PROCESS_ID,out  PROCESS_STATUS_TYPE  PROCESS_STATUS,out  RETURN_CODE_TYPE  RETURN_CODE );
		void GET_MY_NAME(out   PROCESS_NAME_TYPE   PROCESS_NAME,out RETURN_CODE_TYPE  RETURN_CODE );
		void NOTIFY_PROCESS_FINISHED_STATUS(in  PROCESS_ID_TYPE PROCESS_ID,out  PROCESS_RESPONSE_TYPE  PROCESS_RESPONSE,out  RETURN_CODE_TYPE  RETURN_CODE );
		void GET_PROCESS_FINISHED_STATUS(in  PROCESS_ID_TYPE PROCESS_ID,in  SYSTEM_TIME_TYPE TIME_OUT,out  MESSAGE_ADDR_TYPE PROCESS_RESPONSE,in  MESSAGE_SIZE_TYPE PROCESS_RESPONSE_CAPACITY,out  MESSAGE_SIZE_TYPE  PROCESS_RESPONSE_LENGTH,out RETURN_CODE_TYPE  RETURN_CODE);

		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		//! \name Time management services
		void TIMED_WAIT (in  SYSTEM_TIME_TYPE DELAY_TIME,out  RETURN_CODE_TYPE  RETURN_CODE );
		void PERIODIC_WAIT (out  RETURN_CODE_TYPE  RETURN_CODE );
		void GET_TIME (out  SYSTEM_TIME_TYPE  SYSTEM_TIME,out  RETURN_CODE_TYPE  RETURN_CODE );
		void REPLENISH (in  SYSTEM_TIME_TYPE BUDGET_TIME,out  RETURN_CODE_TYPE  RETURN_CODE );

		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		//! \name BLACKBOARD Management Services



		void CREATE_BLACKBOARD (in  BLACKBOARD_NAME_TYPE BLACKBOARD_NAME,in  MESSAGE_SIZE_TYPE MAX_MESSAGE_SIZE,out BLACKBOARD_ID_TYPE  BLACKBOARD_ID,out RETURN_CODE_TYPE  RETURN_CODE );
		void DISPLAY_BLACKBOARD (in  BLACKBOARD_ID_TYPE BLACKBOARD_ID,in  MESSAGE_ADDR_TYPE MESSAGE_ADDR, in  MESSAGE_SIZE_TYPE LENGTH,out RETURN_CODE_TYPE  RETURN_CODE );
		void READ_BLACKBOARD (in  BLACKBOARD_ID_TYPE BLACKBOARD_ID,in  SYSTEM_TIME_TYPE TIME_OUT,out MESSAGE_ADDR_TYPE MESSAGE_ADDR,out MESSAGE_SIZE_TYPE  LENGTH,out RETURN_CODE_TYPE  RETURN_CODE );
		void CLEAR_BLACKBOARD (in  BLACKBOARD_ID_TYPE BLACKBOARD_ID,out RETURN_CODE_TYPE  RETURN_CODE );
		void GET_BLACKBOARD_ID (in  BLACKBOARD_NAME_TYPE BLACKBOARD_NAME,out BLACKBOARD_ID_TYPE  BLACKBOARD_ID,out RETURN_CODE_TYPE  RETURN_CODE );
		void GET_BLACKBOARD_STATUS (in  BLACKBOARD_ID_TYPE BLACKBOARD_ID,out BLACKBOARD_STATUS_TYPE  BLACKBOARD_STATUS,out RETURN_CODE_TYPE  RETURN_CODE );
		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		//! \name SAMPLING PORT Management Services

		void CREATE_SAMPLING_PORT (in  SAMPLING_PORT_NAME_TYPE SAMPLING_PORT_NAME,in  MESSAGE_SIZE_TYPE MAX_MESSAGE_SIZE,in  PORT_DIRECTION_TYPE PORT_DIRECTION,in  SYSTEM_TIME_TYPE REFRESH_PERIOD,out  SAMPLING_PORT_ID_TYPE  SAMPLING_PORT_ID,out  RETURN_CODE_TYPE  RETURN_CODE );
		void WRITE_SAMPLING_MESSAGE (in  SAMPLING_PORT_ID_TYPE SAMPLING_PORT_ID,in  MESSAGE_ADDR_TYPE MESSAGE_ADDR,in  MESSAGE_SIZE_TYPE LENGTH,out  RETURN_CODE_TYPE  RETURN_CODE );
		void READ_SAMPLING_MESSAGE (in  SAMPLING_PORT_ID_TYPE SAMPLING_PORT_ID,out  MESSAGE_ADDR_TYPE MESSAGE_ADDR,out  MESSAGE_SIZE_TYPE  LENGTH,out  VALIDITY_TYPE  VALIDITY,out  RETURN_CODE_TYPE  RETURN_CODE );
		void GET_SAMPLING_PORT_ID (in  SAMPLING_PORT_NAME_TYPE SAMPLING_PORT_NAME,out  SAMPLING_PORT_ID_TYPE  SAMPLING_PORT_ID,out  RETURN_CODE_TYPE  RETURN_CODE );
		void GET_SAMPLING_PORT_STATUS (in  SAMPLING_PORT_ID_TYPE SAMPLING_PORT_ID,out  SAMPLING_PORT_STATUS_TYPE  SAMPLING_PORT_STATUS,out  RETURN_CODE_TYPE  RETURN_CODE );
		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		//! \name QUEUING PORT Management Services

		void CREATE_QUEUING_PORT (in  QUEUING_PORT_NAME_TYPE QUEUING_PORT_NAME,in  MESSAGE_SIZE_TYPE MAX_MESSAGE_SIZE,in  MESSAGE_RANGE_TYPE MAX_NB_MESSAGE,in  PORT_DIRECTION_TYPE PORT_DIRECTION,in  QUEUING_DISCIPLINE_TYPE QUEUING_DISCIPLINE,out QUEUING_PORT_ID_TYPE  QUEUING_PORT_ID,out RETURN_CODE_TYPE  RETURN_CODE );
		void SEND_QUEUING_MESSAGE (in  QUEUING_PORT_ID_TYPE QUEUING_PORT_ID,in  MESSAGE_ADDR_TYPE MESSAGE_ADDR,in  MESSAGE_SIZE_TYPE LENGTH,in  SYSTEM_TIME_TYPE TIME_OUT,out RETURN_CODE_TYPE  RETURN_CODE);
		void RECEIVE_QUEUING_MESSAGE (in  QUEUING_PORT_ID_TYPE QUEUING_PORT_ID,in  SYSTEM_TIME_TYPE TIME_OUT,out MESSAGE_ADDR_TYPE MESSAGE_ADDR,out MESSAGE_SIZE_TYPE  LENGTH,out RETURN_CODE_TYPE  RETURN_CODE );
		void GET_QUEUING_PORT_ID (in  QUEUING_PORT_NAME_TYPE QUEUING_PORT_NAME,out QUEUING_PORT_ID_TYPE  QUEUING_PORT_ID,out RETURN_CODE_TYPE  RETURN_CODE );
		void GET_QUEUING_PORT_STATUS (in  QUEUING_PORT_ID_TYPE QUEUING_PORT_ID,out QUEUING_PORT_STATUS_TYPE  QUEUING_PORT_STATUS,out RETURN_CODE_TYPE  RETURN_CODE );

		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		//! \name BUFFER Management Services
		void CREATE_BUFFER (in  BUFFER_NAME_TYPE BUFFER_NAME,in  MESSAGE_SIZE_TYPE MAX_MESSAGE_SIZE,in  MESSAGE_RANGE_TYPE MAX_NB_MESSAGE,in  QUEUING_DISCIPLINE_TYPE QUEUING_DISCIPLINE,out  BUFFER_ID_TYPE  BUFFER_ID,out  RETURN_CODE_TYPE  RETURN_CODE );
		void SEND_BUFFER (in  BUFFER_ID_TYPE BUFFER_ID,in  MESSAGE_ADDR_TYPE MESSAGE_ADDR,in  MESSAGE_SIZE_TYPE LENGTH,in  SYSTEM_TIME_TYPE TIME_OUT,out  RETURN_CODE_TYPE  RETURN_CODE );
		void RECEIVE_BUFFER (in  BUFFER_ID_TYPE BUFFER_ID,in  SYSTEM_TIME_TYPE TIME_OUT,out  MESSAGE_ADDR_TYPE MESSAGE_ADDR,out  MESSAGE_SIZE_TYPE  LENGTH,out  RETURN_CODE_TYPE  RETURN_CODE );
		void GET_BUFFER_ID (in  BUFFER_NAME_TYPE BUFFER_NAME,out  BUFFER_ID_TYPE  BUFFER_ID,out  RETURN_CODE_TYPE  RETURN_CODE );
		void GET_BUFFER_STATUS (in  BUFFER_ID_TYPE BUFFER_ID,out  BUFFER_STATUS_TYPE  BUFFER_STATUS,out  RETURN_CODE_TYPE  RETURN_CODE );

		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		//! \name HM Services



		void CREATE_HEALTH_MANAGER_PROCESS(in SYSTEM_ADDRESS_TYPE ENTRY_POINT,in PROCESS_NAME_TYPE PROCESS_NAME,in STACK_SIZE_TYPE STACK_SIZE,out HM_DESCRIPTOR_ID_TYPE  HM_DESCRIPTOR_ID,out RETURN_CODE_TYPE  RETURN_CODE);
		void REGISTER_PROCESS_WITH_HEALTH_MANAGER(in PROCESS_ID_TYPE PROCESS_ID, in HM_DESCRIPTOR_ID_TYPE HM_DESCRIPTOR_ID,out BLACKBOARD_ID_TYPE  BLACKBOARD_ID, out  RETURN_CODE_TYPE  RETURN_CODE);
		void START_HM (in  HM_DESCRIPTOR_ID_TYPE HM_DESCRIPTOR_ID,out  RETURN_CODE_TYPE  RETURN_CODE );
		void HM_GET_MY_BUFFER_ID(out BUFFER_ID_TYPE  BUFFER_ID,out RETURN_CODE_TYPE  RETURN_CODE);
		void RAISE_APPLICATION_ERROR (in  ERROR_CODE_TYPE ERROR_CODE,in  MESSAGE_ADDR_TYPE MESSAGE_ADDR,in  ERROR_MESSAGE_SIZE_TYPE LENGTH,out  RETURN_CODE_TYPE  RETURN_CODE );
		void RAISE_APPLICATION_ERROR_AND_GET_RESPONSE (	in  ERROR_CODE_TYPE ERROR_CODE,in  MESSAGE_ADDR_TYPE MESSAGE_ADDR,in  ERROR_MESSAGE_SIZE_TYPE LENGTH,in  SYSTEM_TIME_TYPE TIME_OUT,out  HM_RESPONSE_TYPE  HM_RESPONSE,out  RETURN_CODE_TYPE  RETURN_CODE );
		void RAISE_APPLICATION_ERROR_SELF (in  PROCESS_ID_TYPE FAULTY_PROCESS_ID,in  ERROR_CODE_TYPE ERROR_CODE,in  MESSAGE_ADDR_TYPE MESSAGE_ADDR,in  ERROR_MESSAGE_SIZE_TYPE LENGTH,out  RETURN_CODE_TYPE  RETURN_CODE );		
		void HM_GET_PROCESS_ERROR_MESSAGE(out ERROR_STATUS_TYPE  ERROR_STATUS,out BLACKBOARD_ID_TYPE  TARGET_BBOARD_ID,out RETURN_CODE_TYPE  RETURN_CODE);
		void HM_NOTIFY_PROCESS(in PROCESS_ID_TYPE PROCESS_ID,in HM_RESPONSE_TYPE  HM_RESPONSE,out RETURN_CODE_TYPE  RETURN_CODE);


		
	};
};